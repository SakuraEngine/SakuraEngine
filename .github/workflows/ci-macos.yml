name: macos-build

on: [push, pull_request]

jobs:
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-12 ]
        arch: [ x86_64 ]
        cxx: [ cxx17, cxx20 ]

    name: ${{ matrix.cxx }} + ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: nschloe/action-cached-lfs-checkout@v1

      # many thanks to NazaraEngine: https://github.com/NazaraEngine/NazaraEngine
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

      # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

      # Update xmake repository (in order to have the file that will be cached)
      - name: Update xmake repository
        run: xmake repo --update

      # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      # Cache xmake dependencies
      - name: Retrieve cached xmake dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: macOS-${{ matrix.arch }}-${{ matrix.os }}-${{ matrix.cxx }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}-10

      # Run setup script
      - name: Set env
        id: env
        run: |
          xmake g -c -v
          xmake l setup.lua -v

      - name: ConfigureDebug
        run: xmake f --arch=${{ matrix.arch }} --cxx_version=${{ matrix.cxx }} --mode=debug --yes -v --build_tests=y --build_editors=n --policies=build.ccache:y -c

      - name: BuildDebug
        if: success() || failure()
        run: xmake -y -v
      
      - name: TestDebug
        if: success()
        env:
          TRACY_NO_INVARIANT_CHECK: 1
        run: |
          xmake test -g 05.tests/* -vD ... -d yes

      - name: ConfigureRelease
        if: success() || failure()
        run: xmake f --arch=${{ matrix.arch }} --cxx_version=${{ matrix.cxx }} --mode=release --yes -v --build_tests=y --build_editors=n --use_tracy=disable -c --policies=build.ccache:y

      - name: BuildRelease
        if: success() || failure()
        run: xmake -y -v

      - name: TestRelease
        if: success()
        env:
          TRACY_NO_INVARIANT_CHECK: 1
        run: |
          xmake run -g 05.tests/* -vD ... -d yes

      - name: UploadGeneratedFiles
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-macosx-clang-${{ matrix.cxx }}
          path: build/.gens

      - name: UploadDevelopmentBuild
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-binaries-macosx-clang-${{ matrix.cxx }}
          path: build/macosx

      - name: RemoveBuildDir
        uses: JesseTG/rm@v1.0.3
        with:
          path: build/macosx

      - name: Shipping
        if: success() || failure()
        run: |
          xmake f --arch=${{ matrix.arch }} --cxx_version=${{ matrix.cxx }} --mode=release --yes --build_tests=y --build_editors=n -c --shipping_one_archive=y --use_tracy=disable --policies=build.ccache:y
          xmake -y -v

      - name: UploadGeneratedFiles2
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: shipping-artifacts-macosx-clang-${{ matrix.cxx }}
          path: build/.gens

      - name: UploadShipping
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: shipping-binaries-macosx-clang-${{ matrix.cxx }}
          path: build/macosx
