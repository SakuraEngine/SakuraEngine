<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!-- /Users/saeruhikari/Documents/GitHub/Sakura.Runtime/SDKs/natvis/D3D12MemAlloc.natvis -->
  <Type Name="D3D12MA::Vector&lt;*&gt;">
    <DisplayString>{{ Count={m_Count} }}</DisplayString>
    <Expand>
      <Item Name="[Count]">m_Count</Item>
      <Item Name="[Capacity]">m_Capacity</Item>
      <ArrayItems>
        <Size>m_Count</Size>
        <ValuePointer>m_pArray</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="D3D12MA::List&lt;*&gt;">
    <DisplayString>{{ Count={m_Count} }}</DisplayString>
    <Expand>
      <Item Name="[Count]">m_Count</Item>
      <LinkedListItems>
        <Size>m_Count</Size>
        <HeadPointer>m_pFront</HeadPointer>
        <NextPointer>pNext</NextPointer>
        <ValueNode>Value</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>
  
  <!--
    Due to custom way of accesing next items in
    D3D12MA::IntrusiveLinkedList via methods in provided type traits,
    every specialization must be manually added with
    custom <NextPointer> field describing proper way of iterating the list.
  -->
  <Type Name="D3D12MA::IntrusiveLinkedList&lt;D3D12MA::CommittedAllocationListItemTraits&gt;">
    <DisplayString>{{ Count={m_Count} }}</DisplayString>
    <Expand>
      <Item Name="[Count]">m_Count</Item>
      <LinkedListItems>
        <Size>m_Count</Size>
        <HeadPointer>m_Front</HeadPointer>
        <NextPointer>m_Committed.next</NextPointer>
        <ValueNode>*this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>
  <Type Name="D3D12MA::IntrusiveLinkedList&lt;D3D12MA::PoolListItemTraits&gt;">
    <DisplayString>{{ Count={m_Count} }}</DisplayString>
    <Expand>
      <Item Name="[Count]">m_Count</Item>
      <LinkedListItems>
        <Size>m_Count</Size>
        <HeadPointer>m_Front</HeadPointer>
        <NextPointer>m_NextPool</NextPointer>
        <ValueNode>*this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

<Type Name="skr::span&lt;*, *&gt;">
	<DisplayString>{{ extent = {storage_.size_} }}</DisplayString>
	<Expand>
		<ArrayItems>
			<Size>storage_.size_</Size>
			<ValuePointer>storage_.data_</ValuePointer>
		</ArrayItems>
	</Expand>
</Type>

  <!-- /Users/saeruhikari/Documents/GitHub/Sakura.Runtime/src/ecs/sugoi.natvis -->
    <Type Name="skr_guid_t">
        <DisplayString>{{{Storage0,nvoXb}-{((uint16_t*)&amp;Storage1)[0],nvoXb}-{((uint16_t*)&amp;Storage1)[1],nvoXb}-{((uint8_t*)&amp;Storage2)[0],nvoXb}{((uint8_t*)&amp;Storage2)[1],nvoXb}-{((uint8_t*)&amp;Storage2)[2],nvoXb}{((uint8_t*)&amp;Storage2)[3],nvoXb}{((uint8_t*)&amp;Storage3)[0],nvoXb}{((uint8_t*)&amp;Storage3)[1],nvoXb}{((uint8_t*)&amp;Storage3)[2],nvoXb}{((uint8_t*)&amp;Storage3)[3],nvoXb}}}</DisplayString>
    </Type>
    <Type Name="sugoi_chunk_view_t">
        <Intrinsic Name="has_value" Expression="count != 0 &amp;&amp; chunk != nullptr"/>
        <DisplayString Condition="!has_value()">Empty</DisplayString>
        <DisplayString>{{ start={start}, end={start+count}, chunk={chunk} }}</DisplayString>
        <Expand>
          <Item Name="type">((SkrRT.dll!sugoi_chunk_t*)chunk)-&gt;group-&gt;type</Item>
          <Item Name="archetype">((SkrRT.dll!sugoi_chunk_t*)chunk)-&gt;type</Item>
          <Item Name="group">((SkrRT.dll!sugoi_chunk_t*)chunk)-&gt;group</Item>
          <Item Name="chunk">(SkrRT.dll!sugoi_chunk_t*)chunk</Item>
          <Item Name="[start]" Condition="has_value()">start</Item>
          <Item Name="[size]" Condition="has_value()">count</Item>
          <IndexListItems Condition="has_value()">
            <Size>count</Size>
            <ValueNode>((SkrRT.dll!sugoi_entity_debug_proxy_t*)((SkrRT.dll!sugoi_chunk_t*)chunk+1))[$i+start]</ValueNode>
          </IndexListItems>
        </Expand>
    </Type>
    <Type Name="sugoi_entity_debug_proxy_t">
        <DisplayString> {{ id={value &amp; 0x00FFFFFF} version={value &gt;&gt; 24} }} </DisplayString>
    </Type>
    <Type Name="sugoi_group_t">
        <DisplayString Condition="((SkrRT.dll!sugoi_group_t*)this)-&gt;isDead"> Dead {{ chunkCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;chunkCount}, entityCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;size} }}</DisplayString>
        <DisplayString Condition="((SkrRT.dll!sugoi_group_t*)this)-&gt;disabled"> Disabled {{ chunkCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;chunkCount}, entityCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;size} }}</DisplayString>
        <DisplayString>{{ chunkCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;chunkCount}, entityCount={((SkrRT.dll!sugoi_group_t*)this)-&gt;size} }}</DisplayString>
        <Expand>
            <Item Name="type">((SkrRT.dll!sugoi_group_t*)this)-&gt;type</Item>
            <Item Name="archetype">((SkrRT.dll!sugoi_group_t*)this)-&gt;archetype</Item>
            <LinkedListItems>
                <Size>((SkrRT.dll!sugoi_group_t*)this)-&gt;chunkCount</Size>
                <HeadPointer>((SkrRT.dll!sugoi_group_t*)this)-&gt;firstChunk</HeadPointer>
                <NextPointer>next</NextPointer>
                <ValueNode>(*(SkrRT.dll!sugoi_chunk_t*)this)</ValueNode>
            </LinkedListItems>
        </Expand>
    </Type>
    <Type Name="sugoi_type_set_t">
        <Intrinsic Name="has_value" Expression="length != 0 &amp;&amp; data != nullptr"/>
        <DisplayString Condition="!has_value()"> Empty </DisplayString>
        <DisplayString>{{ size={length} }}</DisplayString>
        <Expand>
            <ArrayItems Condition="has_value()">
                <Size>length</Size>
                <ValuePointer>(SkrRT.dll!sugoi::type_index_t*)data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="sugoi_entity_set_t">
        <Intrinsic Name="has_value" Expression="length != 0 &amp;&amp; data != nullptr"/>
        <DisplayString Condition="!has_value()"> Empty </DisplayString>
        <DisplayString>{{ size={length} }}</DisplayString>
        <Expand>
            <ArrayItems Condition="has_value()">
                <Size>length</Size>
                <ValuePointer>(SkrRT.dll!sugoi_entity_debug_proxy_t*)data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="sugoi_query_t">
        <DisplayString Condition="!((SkrRT.dll!sugoi_query_t*)this)-&gt;built"> Unbuilt </DisplayString>
        <DisplayString> {{ params={((SkrRT.dll!sugoi_query_t*)this)-&gt;parameters.length} }} </DisplayString>
        <Expand>
            <Item Name="filter" Condition="((SkrRT.dll!sugoi_query_t*)this)-&gt;built">((SkrRT.dll!sugoi_query_t*)this)-&gt;buildedFilter</Item>
            <Item Name="filter" Condition="!((SkrRT.dll!sugoi_query_t*)this)-&gt;built">((SkrRT.dll!sugoi_query_t*)this)-&gt;filter</Item>
            <Item Name="metaFilter">((SkrRT.dll!sugoi_query_t*)this)-&gt;meta</Item>
            <Item Name="parameters">((SkrRT.dll!sugoi_query_t*)this)-&gt;parameters</Item>
        </Expand>
    </Type>
    <Type Name="sugoi::type_index_t">
        <DisplayString>{{ {SkrRT.dll!g_sugoi_ctx-&gt;typeRegistry.descriptions.mpBegin[id].name,s}, value={value} }}</DisplayString>
        <Expand>
          <ExpandedItem>SkrRT.dll!g_sugoi_ctx-&gt;typeRegistry.descriptions.mpBegin[id]</ExpandedItem>
        </Expand>
    </Type>
</AutoVisualizer>
